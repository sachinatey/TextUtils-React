{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","prop","alert","react_default","a","createElement","className","concat","b","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","type","data-bs-dismiss","aria-label","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","id","aria-current","home","onClick","toggleMode","htmlFor","defaultProps","about","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","textAlign","_useState4","myStyle","setMyStyle","Fragment","style","color","heading","objectSpread","backgroundColor","value","onChange","event","target","rows","newText","showAlert","split","join","document","getElementById","select","navigator","clipboard","writeText","length","App","setMode","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.a7625a9c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(prop) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    prop.alert && <div className={`alert alert-${prop.alert.b} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(prop.alert.b)}</strong> : {prop.alert.a}\r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert    ","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(prop) {\r\n  return (\r\n    <nav className= {`navbar navbar-expand-lg navbar-${prop.mode} bg-${prop.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      {/* <Link className=\"navbar-brand\" to=\"/\">{prop.title}</Link> */}\r\n      <a className=\"navbar-brand\" href=\"#\">{prop.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">{prop.home}</Link> */}\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{prop.home}</a>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">{prop.about}</Link>\r\n          </li> */}\r\n        </ul>\r\n        <form className=\"d-flex \" role=\"search\">\r\n            {/* <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button> */}\r\n            <div className= {`form-check form-switch text-${prop.mode===\"light\" ? \"dark\":\"light\"} `} >\r\n              <input className=\"form-check-input \" onClick={prop.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    home: PropTypes.string,\r\n    about: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    home: \"Home\",\r\n    about: \"About\"\r\n  };\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(prop) {\r\n  const [text, setText] = useState(\"Enter text here\");\r\n  \r\n\r\n  const [myStyle, setMyStyle] = useState({\r\n    textAlign:'left'\r\n  })\r\n  const textAlign = ()=>{\r\n    if(myStyle.textAlign === 'left'){\r\n      setMyStyle({\r\n        textAlign: 'center'\r\n      })\r\n      prop.showAlert('Text align center', 'success')\r\n    }\r\n    else if(myStyle.textAlign === 'center'){\r\n      setMyStyle({\r\n        textAlign:'right'\r\n      })\r\n      prop.showAlert('Text align right', 'success')\r\n    }\r\n    else{\r\n      setMyStyle({\r\n        textAlign:'left'\r\n      })\r\n      prop.showAlert('Text align left', 'success')\r\n    }\r\n  }\r\n\r\n  const removeSpace = ()=>{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n    prop.showAlert('Extra Space has been removed', 'success')\r\n  }\r\n    \r\n  const handleUpperCase =()=>{\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    prop.showAlert('Text has been converted to Upper Case', 'success')\r\n  }\r\n  \r\n  const handleOnChange = (event)=>{\r\n    setText(event.target.value);\r\n  }\r\n  \r\n  const handleLowerCase = () =>{\r\n    let newText = text.toLowerCase();\r\n    setText(newText)\r\n    prop.showAlert('Text has been converted to Lower Case', 'success')\r\n  }\r\n  \r\n  const handleClearText = ()=>{\r\n    let newText = '';\r\n    setText(newText)\r\n    prop.showAlert('All text has been cleared', 'success')\r\n  }\r\n  \r\n  const copyText= ()=>{\r\n    let text = document.getElementById('myBox');\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className='container' style={{color: prop.mode==='light'?'Black':'white'}}>\r\n        <h2>{prop.heading} </h2>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control \" style={{...myStyle, backgroundColor:prop.mode==='light'?'white':'grey', color:prop.mode==='light'?'black':'white'}} value={text}  onChange= {handleOnChange}  id=\"myBox\" rows=\"6\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpperCase} >Convert To UpperCase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleLowerCase} >Convert To LowerCase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleClearText} >To Clear Textarea</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={textAlign} >Change Text Align</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={removeSpace} >Remove Space</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={copyText} >Copy All</button>\r\n    </div>\r\n    <div className=\"container my-2\" style={{color: prop.mode==='light'?'black':'white'}} >\r\n      <h2>Your text summary</h2>\r\n      <p>{text.split(\" \").length} words, and {text.length} characters</p>\r\n      <p>{0.005 * text.split(\" \").length} Min will take to read this paragraph</p>\r\n      <h2>Preview:</h2>\r\n      <p>{text.length>0?text:\"Type in above text area to see preview here.\"}</p>\r\n    </div>\r\n\r\n    </>\r\n  )\r\n}\r\n","\nimport './App.css';\n// import About from './components/About';\nimport Alert from './components/Alert'\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\n\n \n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  \n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      a: message,\n      b: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n  const toggleMode = () =>{\n    if(mode === \"light\"){\n      setMode('dark');   \n        document.body.style.backgroundColor = '#343a40';\n       showAlert('Dark mode has been activated', 'success')\n    }\n    else{\n      setMode('light');   \n        document.body.style.backgroundColor = 'white';\n        showAlert('Light mode has been activated', 'success')\n      }\n  }\n\n  return (\n    <>\n  {/* <Router> */}\n  <Navbar title=\"TextUtils\" home=\"Home\" mode={mode} toggleMode={toggleMode} />\n  <Alert alert={alert}/>\n  <div className=\"container my-3\">\n  {/* <Routes> */}\n          {/* <Route exact path=\"/about\" element={<About/>}/> */}\n          {/* <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter your text in details.\" mode={mode}/>}/> */}\n          <TextForm showAlert={showAlert} heading=\"Enter your text in details.\" mode={mode}/>\n  {/* </Routes> */}\n  </div>\n  {/* </Router> */}\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}